######################
### DESIGN CHANGES ###
######################

# change prefix key
unbind c-b
set -g prefix C-Space
set -sg escape-time 0
set -g repeat-time 300


# ## Status bar design
# # status line
set -g status-justify left
set -g status-style bg=default
set -g status-fg colour12

# Vim gitgutter
set -g focus-events on


#window mode
setw -g mode-style bg=colour6
setw -g mode-style fg=colour0

# # window status
setw -g window-status-current-style fg=colour81
setw -g window-status-current-style bg=colour238
setw -g window-status-current-format '#[fg=colour0 bg=colour194] #I #[fg=colour255 bg=default] #W'
setw -g window-status-style fg=colour138
setw -g window-status-style bg=colour235
setw -g window-status-format '#[fg=colour255 bg=colour238] #I #[fg=colour250 bg=default] #W'

# # loud or quiet?
# set-option -g visual-activity off
# set-option -g visual-bell off
# set-option -g visual-silence off
# set-window-option -g monitor-activity off
# set-option -g bell-action none
# set-option -g allow-rename off


# # The modes {
setw -g clock-mode-colour colour51
# setw -g mode-style bg=colour226 # both not working at the same time
setw -g mode-style fg=colour51
# # }

# The panes {
set -g pane-border-style bg=colour235
set -g pane-border-style fg=colour238
set -g pane-active-border-style bg=colour236
set -g pane-active-border-style fg=colour51

# }

# The messages {
set -g message-style fg=colour232
set -g message-style bg=colour166


# }

# # The statusbar {
set-option -g status on
set-option -g status-interval 1
set-option -g status-justify "left"
set-option -g status-left-length 80
set-option -g status-right-length 90
set-option -g status-left "#(~/dotfiles/tmux/plugins/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/dotfiles/tmux/plugins/tmux-powerline/powerline.sh right)"

# set -g status-right '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} #(~/dotfiles/tmux/temp.sh) #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right '#{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '
# source "/usr/share/powerline/bindings/tmux/powerline.conf"
# set -g status-right-length 50
# set -g status-left-length 20


# setw -g window-status-bell-style fg=colour255
# setw -g window-status-bell-style bg=colour1

# # }


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf|lazygit|lazydocker|showkey|cartero|nnn|cargo-watch)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-Â¿ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key v split-window -h
bind-key s split-window -v
bind-key -r C-k resize-pane -U 5
bind-key -r C-j resize-pane -D 5
bind-key -r C-h resize-pane -L 5
bind-key -r C-l resize-pane -R 5
set -g mouse on

# copy and pasting
setw -g mode-keys vi
bind-key P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi s send-keys -X stop-selection
bind-key -T copy-mode-vi c send-keys -X clear-selection
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"

## sane scrolling:
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
bind-key -r j swap-window -d -t -1
bind-key -r k swap-window -d -t +1

bind-key S choose-session -Z
bind-key r source-file ~/.tmux.conf \; display "Reloaded config"
bind-key Z  select-pane -lZ

# set tmux path to current's pane
bind-key H attach -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind N new-window -c "#{pane_current_path}"
bind-key A display-popup -E "copyq read 0 1 2 3 4 5 6 7 8 9 10 | fzf | nohup xclip -loops 0 -sel clip > /dev/null 2>&1"
bind-key G display-popup -w "70%" -h "90%" -E "lazygit"
bind-key D display-popup -w "70%" -h "90%" -E "lazydocker"


# Already in sensible plugin
# set -g default-teminal "screen-256color"
set -g default-terminal "screen-256color"
set-option -a terminal-features 'screen-256color:RGB'
set-window-option -g xterm-keys on
# set -g status-interval 1


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'primary'
set -g @yank_action 'copy-pipe-and-cancel'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/dotfiles/tmux/plugins/'
run -b '~/dotfiles/tmux/plugins/tpm/tpm'
