######################
### DESIGN CHANGES ###
######################

# change prefix key
unbind c-b
set -g prefix C-Space

## panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=brightred

## Status bar design
# status line
set -g status-justify left
set -g status-style bg=default
set -g status-fg colour12

# Vim gitgutter
set -g focus-events on

## messaging
set -g message-style fg=black
set -g message-style bg=yellow
set -g message-command-style fg=blue
set -g message-command-style bg=black

#window mode
setw -g mode-style bg=colour6
setw -g mode-style fg=colour0


# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-style bg=colour0
setw -g window-status-current-style fg=colour11
setw -g window-status-current-style attr=dim
setw -g window-status-style bg=green
setw -g window-status-style fg=black
setw -g window-status-style attr=reverse

# Info on left (I don't have a session display for now)
# set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none
set-option -g allow-rename off


# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style attr=bold
setw -g mode-style fg=colour196
setw -g mode-style bg=colour238

# }
# The panes {

set -g pane-border-style bg=colour235
set -g pane-border-style fg=colour238
set -g pane-active-border-style bg=colour236
set -g pane-active-border-style fg=colour51

# }
# The statusbar {
set -g status-position bottom
set -g status-style bg=colour234
set -g status-style fg=colour137
set -g status-style attr=dim
set -g status-left ''

set -g status-right '#(~/dotfiles/tmux/temp.sh) #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81
setw -g window-status-current-style bg=colour238
setw -g window-status-current-style attr=bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style fg=colour138
setw -g window-status-style bg=colour235
setw -g window-status-style attr=none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style attr=bold
setw -g window-status-bell-style fg=colour255
setw -g window-status-bell-style bg=colour1

# }
# The messages {

set -g message-style attr=bold
set -g message-style fg=colour232
set -g message-style bg=colour166

# }

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-Â¿ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
setw -g mode-keys vi
bind-key v split-window -h
bind-key s split-window -v
bind-key  C-k resize-pane -U 5
bind-key  C-j resize-pane -D 5
bind-key  C-h resize-pane -L 5
bind-key  C-l resize-pane -R 5
set -g mouse on
# copy and pastin
bind-key P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"

## sane scrolling:
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"
bind-key -r j swap-window -d -t -1
bind-key -r k swap-window -d -t +1

bind-key S choose-session
bind-key r source-file ~/.tmux.conf \; display "Reloaded config"
bind-key H attach -c "#{pane_current_path}"


# Already in sensible plugin
# set -g default-teminal "screen-256color"
set -g default-terminal "screen-256color"
# set -g status-right '#(~/dotfiles/tmux/temp.sh) #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
source "/usr/share/powerline/bindings/tmux/powerline.conf"
set-window-option -g xterm-keys on
set -g status-interval 1


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# Other examples:
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
